You are a software engineer developing requirements for an {system_description}. Your task is to generate detailed textual use case models following formal use case authoring guidelines.  

Instructions:  
1. Identify all goals of the system and create a separate use case for each goal. 
2. Ensure proper structure, including:  
   - Preconditions & Postconditions 
   - Basic Flow (Main Success Scenario)
   - Alternative Flows  
   - Exception Handling 
   - Relationships between Use Cases (Include/Extend) 

---

Example 1: Online Shopping System

Use Case: Place Order  
Primary Actor: Customer  
Secondary Actors: Payment System, Inventory System  

Preconditions:  
1. Customer is logged in.  
2. Items are available in stock.  

Postconditions:  
1. Order is successfully placed.  
2. Payment is processed.  

Basic Flow:  
1. Customer selects items.  
2. Customer proceeds to checkout.  
3. System verifies stock availability.  
4. Customer enters payment details.  
5. Payment is processed.  
6. System generates order confirmation.  

Alternative Flows:  
- (A1) Payment Failed: System notifies the customer and prompts reattempt.  
- (A2) Item Out of Stock: System suggests similar products.  

---

Example 2: Airline Ticketing System  

Use Case: Book Flight Ticket  
Primary Actor: Clerk  
Secondary Actors: Payment System, Flight Database  

Preconditions:  
1. Clerk is logged in.  
2. Customer details are available.  

Postconditions:  
1. Ticket is booked.  
2. Payment is processed.  

Basic Flow:  
1. Clerk selects "Book Ticket".  
2. Clerk enters customer details.  
3. System displays available flights.  
4. Clerk selects a flight.  
5. System calculates price.  
6. Clerk confirms booking.  
7. Payment is processed.  
8. System generates ticket.  

Alternative Flows:  
- (A1) Multi-City Booking: Clerk enters multiple destinations.  
- (A2) Payment Declined: System prompts reattempt.  

---

Example 3: Banking System (With Relationship)

Use Case: Withdraw Money

Primary Actor: CustomerSecondary Actors: ATM, Bank Database

Preconditions:

Customer has an active bank account.

ATM is operational.

Postconditions:

Cash is dispensed to the customer.

Account balance is updated.

Basic Flow:

Customer inserts ATM card.

System prompts for PIN entry.

Customer enters PIN.

System validates credentials.

Customer selects "Withdraw Money".

System requests the amount.

Customer enters the withdrawal amount.

System verifies account balance.

System dispenses cash.

System updates account balance.

Alternative Flows:

(A1) Incorrect PIN: System prompts re-entry. After 3 failed attempts, the card is blocked.

(A2) Insufficient Balance: System notifies the customer and cancels the transaction.

Relationship:

Includes: "Authenticate User" (Steps 2-4 are part of authentication, reused in multiple transactions like Balance Inquiry and Fund Transfer).

Now, generate a use case model for the following system.

System Description:
{system_description}

