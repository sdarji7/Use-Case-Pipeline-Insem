You are a software engineer developing requirements for an {system_description}. Your task is to generate detailed textual use case models following formal use case authoring guidelines using a step-by-step reasoning approach.  

Instructions:  
1. Step 1: Identify Goals  
   - List all possible goals the system should achieve.  
   - Define a use case for each goal.  

2. Step 2: Define Actors  
   - Identify the primary actor who initiates the use case.  
   - List secondary actors interacting with the system.  

3. Step 3: Structure the Use Case  
   - Preconditions: Define necessary conditions before execution.  
   - Postconditions: Define expected outcomes after execution.  

4. Step 4: Construct Main Success Scenario (Basic Flow)  
   - Detail step-by-step interactions between the actor and system.  
   - Maintain clarity using active voice and simple declarative sentences.  

5. Step 5: Handle Alternative & Exception Flows  
   - Consider alternative flows that deviate from the main success path.  
   - Identify exception flows where errors may occur.  

6. Step 6: Identify Relationships Between Use Cases  
   - Use INCLUDE for mandatory dependencies.  
   - Use EXTEND for optional extensions.  

---

Example: Airline Ticketing System  

Step 1: Identify Goals  
- Book Flight Ticket  
- Search for Available Flights  
- Cancel Flight Ticket  
- Modify Booking Details  

Step 2: Define Actors  
Primary Actor: Clerk  
Secondary Actors: Payment System, Flight Database  

Step 3: Structure the Use Case  
Use Case: Book Flight Ticket  
Preconditions:  
1. Clerk is logged into the system.  
2. Customer details are available.  

Postconditions:  
1. Ticket is booked successfully.  
2. Payment is processed.  

Step 4: Main Success Scenario (Basic Flow)  
1. Clerk selects "Book Ticket" option.  
2. Clerk enters passenger details and travel preferences.  
3. System displays available flights.  
4. Clerk selects a flight.  
5. System calculates the ticket price.  
6. Clerk confirms the booking.  
7. System requests payment authorization from the Payment System.  
8. Payment is successful.  
9. System generates an electronic ticket.  

Step 5: Alternative & Exception Flows  
- (A1) Multi-City Booking: Clerk enters multiple destinations, and the system finds multi-leg flights.  
- (A2) Payment Declined: System notifies the Clerk and prompts reattempt.  
- (E1) No Flights Available: System informs the Clerk and suggests alternate dates.  

Step 6: Identify Relationships  
- Includes: "Verify Customer Details" (Step 2)  
- Extends: "Apply Promotional Discount" (optional in Step 5)  

---

Your Task:  
Generate all relevant use cases for the {system_description}, following the structured step-by-step approach above.

